<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.test</groupId>
	<artifactId>tdc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>tdc</name>
	<url>http://maven.apache.org</url>

	<properties>
		<jetty.version>8.1.2.v20120308</jetty.version>
		<cargo.version>1.2.0</cargo.version>
		<jackson.version>1.9.6</jackson.version>
		<servlet.version>2.5</servlet.version>
		<jstl.version>1.2</jstl.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>net.sf.supercsv</groupId>
			<artifactId>super-csv</artifactId>
			<version>2.0.1</version>
		</dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>3.1.1.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.1.1.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>3.1.1.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<!-- spring -->

		<!-- jackson -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-lgpl</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-lgpl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- jackson -->
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.htmlparser</groupId>
			<artifactId>htmlparser</artifactId>
			<version>2.1</version>
		</dependency>
      	
      	<dependency>
	      	<groupId>org.apache.httpcomponents</groupId>
	      	<artifactId>httpclient</artifactId>
	      	<version>4.1.1</version>
	    </dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- jetty-maven-plugin主要用来帮助日常的快速开发和测试 -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webAppConfig>
						<contextPath>/</contextPath>
					</webAppConfig>
					<stopPort>9999</stopPort>
					<stopKey>foo</stopKey>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>8080</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- cargo-maven2-plugin主要服务于自动化部署,例如专门的测试人员只需要一条简单的Maven命令,就可以构建项目并部署到Web容器中，然后进行功能测试 
				cargo-maven2-plugin的groupId是org.codehaus.cargo,这不属于官方的Maven插件groupId,因此用户需要将其添加到settings.xml的plugingGroup元素中以方便命令行调用。 
				<pluginGroups> <pluginGroup>org.codehaus.cargo</pluginGroup> </pluginGroups> -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>${cargo.version}</version>
				<configuration>
					<container>
						<containerId>tomcat6x</containerId>
						<type>installed</type>
						<!-- TOMCAT_HOME needs to be defined, e.g. in settings.xml or an environment 
							variable -->
						<home>${TOMCAT_HOME}</home>
					</container>
					<configuration>
						<type>standalone</type>
						<home>${project.build.directory}/tomcat6x</home>
					</configuration>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central2</id>
			<name>Maven Repository Switchboard</name>
			<url>http://repo2.maven.org/maven2</url>
		</repository>
	</repositories>
</project>
